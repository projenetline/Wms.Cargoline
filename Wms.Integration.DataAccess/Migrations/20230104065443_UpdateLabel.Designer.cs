// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Wms.Integration.DataAccess.Concrete.Contexts;

#nullable disable

namespace Wms.Integration.DataAccess.Migrations
{
    [DbContext(typeof(WMSAPIContext))]
    [Migration("20230104065443_UpdateLabel")]
    partial class UpdateLabel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Wms.Integration.Core.Entities.Concrete.OperationClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("NVarChar");

                    b.HasKey("Id");

                    b.ToTable("OperationClaims", (string)null);
                });

            modelBuilder.Entity("Wms.Integration.Core.Entities.Concrete.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("FirstName")
                        .HasColumnType("NVarChar");

                    b.Property<string>("LastName")
                        .HasColumnType("NVarChar");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("VarBinary");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("VarBinary");

                    b.Property<bool>("Status")
                        .HasColumnType("Bit");

                    b.Property<string>("UserName")
                        .HasColumnType("NVarChar");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("Wms.Integration.Core.Entities.Concrete.UserOperationClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("OperationClaimId")
                        .HasColumnType("Int");

                    b.Property<int>("UserId")
                        .HasColumnType("Int");

                    b.HasKey("Id");

                    b.HasIndex("OperationClaimId");

                    b.HasIndex("UserId");

                    b.ToTable("UserOperationClaims", (string)null);
                });

            modelBuilder.Entity("Wms.Integration.Entities.Concrete.HttpLogger", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("UniqueIdentifier");

                    b.Property<string>("Body")
                        .HasColumnType("NVarChar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullUrl")
                        .HasColumnType("NVarChar(max)");

                    b.Property<string>("LocalIp")
                        .HasColumnType("NVarChar(max)");

                    b.Property<int>("LocalPort")
                        .HasColumnType("Int");

                    b.Property<string>("RemoteIp")
                        .HasColumnType("NVarChar(max)");

                    b.Property<int>("RemotePort")
                        .HasColumnType("Int");

                    b.Property<string>("Response")
                        .HasColumnType("NVarChar(max)");

                    b.Property<int>("ResponseStatu")
                        .HasColumnType("Int");

                    b.HasKey("Id");

                    b.ToTable("HttpLogger", (string)null);
                });

            modelBuilder.Entity("Wms.Integration.Entities.Concrete.LabelBody", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("UniqueIdentifier");

                    b.Property<Guid>("LabelHeaderId")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LabelHeaderId");

                    b.ToTable("LabelBody", (string)null);
                });

            modelBuilder.Entity("Wms.Integration.Entities.Concrete.LabelHeader", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("UniqueIdentifier");

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BoxCount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClDefintion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Desi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvoiceCount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LabelCount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderNr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaletNr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Town")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Transporter")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LabelHeader", (string)null);
                });

            modelBuilder.Entity("Wms.Integration.Entities.Concrete.Logger", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("UniqueIdentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("DateTime");

                    b.Property<string>("Message1")
                        .HasMaxLength(250)
                        .HasColumnType("NVarChar(250)");

                    b.Property<string>("Message2")
                        .HasMaxLength(250)
                        .HasColumnType("NVarChar(250)");

                    b.Property<string>("MethodName")
                        .HasMaxLength(250)
                        .HasColumnType("NVarChar(250)");

                    b.Property<string>("ProjectName")
                        .HasMaxLength(250)
                        .HasColumnType("NVarChar(250)");

                    b.Property<string>("Statu")
                        .HasMaxLength(250)
                        .HasColumnType("NVarChar(250)");

                    b.HasKey("Id");

                    b.ToTable("Logger", (string)null);
                });

            modelBuilder.Entity("Wms.Integration.Core.Entities.Concrete.UserOperationClaim", b =>
                {
                    b.HasOne("Wms.Integration.Core.Entities.Concrete.OperationClaim", "OperationClaim")
                        .WithMany("UserOperationClaims")
                        .HasForeignKey("OperationClaimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Wms.Integration.Core.Entities.Concrete.User", "User")
                        .WithMany("OperationClaims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OperationClaim");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Wms.Integration.Entities.Concrete.LabelBody", b =>
                {
                    b.HasOne("Wms.Integration.Entities.Concrete.LabelHeader", "LabelHeader")
                        .WithMany("labelBodies")
                        .HasForeignKey("LabelHeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LabelHeader");
                });

            modelBuilder.Entity("Wms.Integration.Core.Entities.Concrete.OperationClaim", b =>
                {
                    b.Navigation("UserOperationClaims");
                });

            modelBuilder.Entity("Wms.Integration.Core.Entities.Concrete.User", b =>
                {
                    b.Navigation("OperationClaims");
                });

            modelBuilder.Entity("Wms.Integration.Entities.Concrete.LabelHeader", b =>
                {
                    b.Navigation("labelBodies");
                });
#pragma warning restore 612, 618
        }
    }
}
